/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidad_grupo_87.Vistas;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidad_grupo_87.AccesoADatos.AlumnoData;
import universidad_grupo_87.AccesoADatos.InscripcionData;
import universidad_grupo_87.Entidades.Alumno;
import universidad_grupo_87.Entidades.Materia;
import universidad_grupo_87.Entidades.Inscripcion;

/**
 *
 * @author psg_7
 */
public class FormularioDeInscripcion extends javax.swing.JInternalFrame {
    
    private DefaultTableModel modelo = new DefaultTableModel(){
    
    public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };
        
    /**
     * Creates new form FormularioDeInscripcion
     */
    public FormularioDeInscripcion(){
        initComponents();
        armarCabecera();
        cargarCombo();
            }
     
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botones = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbAlumnoSeleccionado = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jrbMateriasInscriptas = new javax.swing.JRadioButton();
        jrbMateriasNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtVistaInscripciones = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbAnularInscripcion = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 102));
        setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("FORMULARIO DE INSCRIPCION");

        jcbAlumnoSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnoSeleccionadoActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccione un alumno:");

        jrbMateriasInscriptas.setText("Materias Inscriptas");
        jrbMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMateriasInscriptasActionPerformed(evt);
            }
        });

        jrbMateriasNoInscriptas.setText("Materias No Inscriptas");
        jrbMateriasNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMateriasNoInscriptasActionPerformed(evt);
            }
        });

        jtVistaInscripciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtVistaInscripciones);

        jbInscribir.setBackground(new java.awt.Color(0, 0, 0));
        jbInscribir.setForeground(new java.awt.Color(255, 255, 255));
        jbInscribir.setText("Inscribir");
        jbInscribir.setBorder(null);
        jbInscribir.setMaximumSize(new java.awt.Dimension(67, 23));
        jbInscribir.setMinimumSize(new java.awt.Dimension(67, 23));
        jbInscribir.setOpaque(false);
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnularInscripcion.setBackground(new java.awt.Color(0, 0, 0));
        jbAnularInscripcion.setForeground(new java.awt.Color(255, 255, 255));
        jbAnularInscripcion.setText("Anular Inscripci√≥n");
        jbAnularInscripcion.setBorder(null);
        jbAnularInscripcion.setMaximumSize(new java.awt.Dimension(90, 20));
        jbAnularInscripcion.setMinimumSize(new java.awt.Dimension(90, 20));
        jbAnularInscripcion.setOpaque(false);
        jbAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularInscripcionActionPerformed(evt);
            }
        });

        jbSalir.setBackground(new java.awt.Color(0, 0, 0));
        jbSalir.setForeground(new java.awt.Color(255, 255, 255));
        jbSalir.setText("Salir");
        jbSalir.setBorder(null);
        jbSalir.setMaximumSize(new java.awt.Dimension(36, 23));
        jbSalir.setMinimumSize(new java.awt.Dimension(36, 23));
        jbSalir.setOpaque(false);
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jrbMateriasInscriptas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jrbMateriasNoInscriptas))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbAnularInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(124, 124, 124)
                                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(60, 60, 60)
                        .addComponent(jcbAlumnoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbAlumnoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbMateriasInscriptas)
                    .addComponent(jrbMateriasNoInscriptas))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAnularInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbAlumnoSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnoSeleccionadoActionPerformed
        // TODO add your handling code here:
        borrarFilas();

        Alumno alumno = (Alumno) jcbAlumnoSeleccionado.getSelectedItem();
        InscripcionData ind = new InscripcionData();
        if (jrbMateriasInscriptas.isSelected()){
            for (Materia ins : ind.obtenerMateriasCursadas(alumno.getIdAlumno())) {
            modelo.addRow(new Object[]{ins.getIdMateria(), ins.getNombre(), ins.getA√±o()});
        } 
        }else {
                for (Materia ins : ind.obtenerMateriasNOCursadas(alumno.getIdAlumno())) {
            modelo.addRow(new Object[]{ins.getIdMateria(), ins.getNombre(), ins.getA√±o()});
                
                }
            }
    }//GEN-LAST:event_jcbAlumnoSeleccionadoActionPerformed

    private void jrbMateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMateriasInscriptasActionPerformed
        // TODO add your handling code here:
     botones.add(jrbMateriasInscriptas);
     
     botones.add(jrbMateriasNoInscriptas);
     
     if(jrbMateriasInscriptas.isSelected()){
         
         borrarFilas();
         
         cargarTabla();
     
     }else if (jrbMateriasNoInscriptas.isSelected()){ 
         
         borrarFilas();
         
         cargarTablaNoCursadas();
         
     }
    }//GEN-LAST:event_jrbMateriasInscriptasActionPerformed

    private void jbAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularInscripcionActionPerformed
        // TODO add your handling code here:
    int filaS=jtVistaInscripciones.getSelectedRow();
    if (jrbMateriasInscriptas.isSelected()){
    if (filaS!=-1){   
      //int filaS=jtVistaInscripciones.getSelectedRow();
    int idMateria = (Integer)jtVistaInscripciones.getValueAt(filaS, 0);
    
    InscripcionData inscDt = new InscripcionData();
    Alumno alum = (Alumno)jcbAlumnoSeleccionado.getSelectedItem();
    inscDt.borrarInscripcionMateriaAlumno(alum.getIdAlumno(), idMateria);
    
        JOptionPane.showMessageDialog(this, "Inscripci√≥n eliminada exitosamente");
        modelo.removeRow(filaS);
    }else{
        JOptionPane.showMessageDialog(this, "Usted no ha seleccionado la materia que desea anular");
   
    }
    }else{
        JOptionPane.showMessageDialog(this, "Por favor seleccione una materia en la que est√© inscripta");
    }
    }//GEN-LAST:event_jbAnularInscripcionActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        // TODO add your handling code here:
        int filaS=jtVistaInscripciones.getSelectedRow();
        if (jrbMateriasNoInscriptas.isSelected()){
        if (filaS!=-1){
        Alumno alu = (Alumno)jcbAlumnoSeleccionado.getSelectedItem();
        InscripcionData ind=new InscripcionData();
         //int filaS=jtVistaInscripciones.getSelectedRow();
         int idMateria = (Integer)jtVistaInscripciones.getValueAt(filaS, 0);
         String nombre = (String)jtVistaInscripciones.getValueAt(filaS, 1);
         int a√±o = (Integer)jtVistaInscripciones.getValueAt(filaS, 2);
         Materia mater = new Materia(idMateria, nombre, a√±o, true);
         Inscripcion ins = new Inscripcion(alu, mater, 0);
         ind.guardarInscripcion(ins);
         
        JOptionPane.showMessageDialog(this, "Inscripci√≥n exitosa");
        modelo.removeRow(filaS);
    }else{
        JOptionPane.showMessageDialog(this, "Usted no ha seleccionado la materia que desea inscribir");
    }
        }else{
        JOptionPane.showMessageDialog(this, "Seleccione una materia en la que no est√© inscripto");
        }
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jrbMateriasNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMateriasNoInscriptasActionPerformed
        // TODO add your handling code here:
      if(jrbMateriasInscriptas.isSelected()){
         
         borrarFilas();
         
         cargarTabla();
     
     }else if (jrbMateriasNoInscriptas.isSelected()){ 
         
         borrarFilas();
         
         cargarTablaNoCursadas();
         
     }    
    }//GEN-LAST:event_jrbMateriasNoInscriptasActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup botones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnularInscripcion;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcbAlumnoSeleccionado;
    private javax.swing.JRadioButton jrbMateriasInscriptas;
    private javax.swing.JRadioButton jrbMateriasNoInscriptas;
    private javax.swing.JTable jtVistaInscripciones;
    // End of variables declaration//GEN-END:variables

private void cargarCombo(){
    
    AlumnoData ad = new AlumnoData();
    for (Alumno alumno : ad.listarAlumnos()){
        jcbAlumnoSeleccionado.addItem(alumno);
        }
}

private void armarCabecera(){
    modelo.addColumn("C√≥digo");
    modelo.addColumn("Nombre");
    modelo.addColumn("A√±o");
    jtVistaInscripciones.setModel(modelo);
}

 public void borrarFilas() {
        int x = jtVistaInscripciones.getRowCount() - 1;

        for (int i = x; i >= 0; i--) {
            modelo.removeRow(i);
        }

    }

private void cargarTabla() {
        borrarFilas();

        Alumno alumno = (Alumno) jcbAlumnoSeleccionado.getSelectedItem();
        InscripcionData ind = new InscripcionData();

        for (Materia ins : ind.obtenerMateriasCursadas(alumno.getIdAlumno())) {
            modelo.addRow(new Object[]{ins.getIdMateria(), ins.getNombre(), ins.getA√±o()});
        }
    }
private void cargarTablaNoCursadas() {
        borrarFilas();

        Alumno alumno = (Alumno) jcbAlumnoSeleccionado.getSelectedItem();
        InscripcionData ind = new InscripcionData();

        for (Materia ins : ind.obtenerMateriasNOCursadas(alumno.getIdAlumno())) {
            modelo.addRow(new Object[]{ins.getIdMateria(), ins.getNombre(), ins.getA√±o()});
        }
    }

}



